


   CREATE SEQUENCE SEQ_PROSESS_TASK MINVALUE 30000000 START WITH 30000000 INCREMENT BY 50 NOCACHE NOCYCLE;
   CREATE SEQUENCE SEQ_PROSESS_TASK_GRUPPE MINVALUE 30000000 START WITH 30000000 INCREMENT BY 1000000 NOCACHE NOCYCLE;


   CREATE INDEX IDX_PROSESS_TASK_1 ON PROSESS_TASK (STATUS);
   CREATE INDEX IDX_PROSESS_TASK_2 ON PROSESS_TASK (TASK_TYPE);
   CREATE INDEX IDX_PROSESS_TASK_3 ON PROSESS_TASK (NESTE_KJOERING_ETTER);
   CREATE INDEX IDX_PROSESS_TASK_4 ON PROSESS_TASK (TASK_GRUPPE);
   CREATE INDEX IDX_PROSESS_TASK_6 ON PROSESS_TASK (BLOKKERT_AV) ;

   COMMENT ON COLUMN PROSESS_TASK.ID IS 'Primary Key';
   COMMENT ON COLUMN PROSESS_TASK.TASK_TYPE IS 'navn på task. Brukes til å matche riktig implementasjon';
   COMMENT ON COLUMN PROSESS_TASK.PRIORITET IS 'prioritet på task.  Høyere tall har høyere prioritet';
   COMMENT ON COLUMN PROSESS_TASK.STATUS IS 'status på task: KLAR, NYTT_FORSOEK, FEILET, VENTER_SVAR, FERDIG';
   COMMENT ON COLUMN PROSESS_TASK.TASK_PARAMETERE IS 'parametere angitt for en task';
   COMMENT ON COLUMN PROSESS_TASK.TASK_PAYLOAD IS 'inputdata for en task';
   COMMENT ON COLUMN PROSESS_TASK.TASK_GRUPPE IS 'angir en unik id som grupperer flere ';
   COMMENT ON COLUMN PROSESS_TASK.TASK_SEKVENS IS 'angir rekkefølge på task innenfor en gruppe ';
   COMMENT ON COLUMN PROSESS_TASK.NESTE_KJOERING_ETTER IS 'tasken skal ikke kjøeres før tidspunkt er passert';
   COMMENT ON COLUMN PROSESS_TASK.FEILEDE_FORSOEK IS 'antall feilede forsøk';
   COMMENT ON COLUMN PROSESS_TASK.SISTE_KJOERING_TS IS 'siste gang tasken ble forsøkt kjørt (før kjøring)';
   COMMENT ON COLUMN PROSESS_TASK.SISTE_KJOERING_SLUTT_TS IS 'tidsstempel siste gang tasken ble kjørt (etter kjøring)';
   COMMENT ON COLUMN PROSESS_TASK.SISTE_KJOERING_FEIL_KODE IS 'siste feilkode tasken fikk';
   COMMENT ON COLUMN PROSESS_TASK.SISTE_KJOERING_FEIL_TEKST IS 'siste feil tasken fikk';
   COMMENT ON COLUMN PROSESS_TASK.SISTE_KJOERING_SERVER IS 'navn på node som sist kjørte en task (server@pid)';
   COMMENT ON COLUMN PROSESS_TASK.VERSJON IS 'angir versjon for optimistisk låsing';
   COMMENT ON COLUMN PROSESS_TASK.BLOKKERT_AV IS 'Id til ProsessTask som blokkerer kjøring av denne (når status=VETO)';

   COMMENT ON TABLE PROSESS_TASK  IS 'Inneholder tasks som skal kjøres i bakgrunnen';


--------------------------------------------------------
--  DDL for FAGSAK_PROSESS_TASK
--------------------------------------------------------

  CREATE TABLE FAGSAK_PROSESS_TASK (
    ID               NUMBER(19,0)                           NOT NULL,
	  FAGSAK_ID        NUMBER(19,0)                           NOT NULL,
	  PROSESS_TASK_ID  NUMBER(19,0)                           NOT NULL,
	  BEHANDLING_ID    NUMBER(19,0),
	  VERSJON          NUMBER(19,0)      DEFAULT 0            NOT NULL,
	  OPPRETTET_AV     VARCHAR2(20 CHAR) DEFAULT 'VL'         NOT NULL,
	  OPPRETTET_TID    TIMESTAMP (3)     DEFAULT systimestamp NOT NULL,
	  ENDRET_AV        VARCHAR2(20 CHAR),
	  ENDRET_TID       TIMESTAMP (3),
	  GRUPPE_SEKVENSNR NUMBER(19,0),
	  CONSTRAINT PK_FAGSAK_PROSESS_TASK PRIMARY KEY (ID),
	  CONSTRAINT FK_FAGSAK_PROSESS_TASK_2 FOREIGN KEY (PROSESS_TASK_ID) REFERENCES PROSESS_TASK (ID)
   );

   CREATE SEQUENCE SEQ_FAGSAK_PROSESS_TASK MINVALUE 3000000 START WITH 3000000 INCREMENT BY 50 NOCACHE NOCYCLE;

   CREATE UNIQUE INDEX UIDX_FAGSAK_PROSESS_TASK_1 ON FAGSAK_PROSESS_TASK (FAGSAK_ID, PROSESS_TASK_ID);
   CREATE INDEX IDX_FAGSAK_PROSESS_TASK_1 ON FAGSAK_PROSESS_TASK (FAGSAK_ID);
   CREATE INDEX IDX_FAGSAK_PROSESS_TASK_2 ON FAGSAK_PROSESS_TASK (PROSESS_TASK_ID);
   CREATE INDEX IDX_FAGSAK_PROSESS_TASK_3 ON FAGSAK_PROSESS_TASK (BEHANDLING_ID);
   CREATE INDEX IDX_FAGSAK_PROSESS_TASK_4 ON FAGSAK_PROSESS_TASK (GRUPPE_SEKVENSNR);

   COMMENT ON COLUMN FAGSAK_PROSESS_TASK.ID IS 'Primærnøkkel';
   COMMENT ON COLUMN FAGSAK_PROSESS_TASK.FAGSAK_ID IS 'Kobling til fagsak';
   COMMENT ON COLUMN FAGSAK_PROSESS_TASK.PROSESS_TASK_ID IS 'FK: Fremmednøkkel for knyttning til logging av prosesstask som ???';
   COMMENT ON COLUMN FAGSAK_PROSESS_TASK.BEHANDLING_ID IS 'Kobling til behandling';
   COMMENT ON COLUMN FAGSAK_PROSESS_TASK.GRUPPE_SEKVENSNR IS 'For en gitt fagsak angir hvilken rekkefølge task skal kjøres.  Kun tasks med laveste gruppe_sekvensnr vil kjøres. Når disse er FERDIG vil de ryddes bort og neste med lavest sekvensnr kan kjøres (gitt at den er KLAR)';
   COMMENT ON TABLE FAGSAK_PROSESS_TASK  IS '1-M relasjonstabell for ? mappe fagsak til prosess_tasks (som ikke er FERDIG)';

